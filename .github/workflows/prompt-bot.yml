name: Prompt Bot

on:
  # 1) Manual run from Actions tab (lets you type a prompt)
  workflow_dispatch:
    inputs:
      prompt:
        description: "Prompt to send to the model (optional)"
        required: false

  # 2) iOS Shortcuts / API trigger
  repository_dispatch:
    types: [chatgpt_task]

permissions:
  contents: write

jobs:
  run-prompt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js (for safe JSON + file writing)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Decide where the prompt comes from: repository_dispatch > manual input > default
      - id: resolve
        name: Resolve prompt from event or manual input
        shell: bash
        run: |
          set -e
          if [ -n "${{ github.event.client_payload.prompt }}" ]; then
            PROMPT_SRC="${{ github.event.client_payload.prompt }}"
          elif [ -n "${{ inputs.prompt }}" ]; then
            PROMPT_SRC="${{ inputs.prompt }}"
          else
            PROMPT_SRC="Write a one-section homepage with a bold hero, subhead, and a single primary CTA button. Style it with Tailwind classes and export a React/Next.js page component (TypeScript, client component)."
          fi

          # Return the prompt via GITHUB_OUTPUT (handles newlines safely)
          {
            echo "prompt<<'EOF'"
            echo "$PROMPT_SRC"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Build request.json for OpenAI
        env:
          PROMPT: ${{ steps.resolve.outputs.prompt }}
        run: |
          node -e "
            const fs = require('fs');
            const data = { model: 'gpt-4.1-mini', input: process.env.PROMPT };
            fs.writeFileSync('request.json', JSON.stringify(data));
          "

      - name: Call OpenAI (Responses API)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -e
          curl -sS https://api.openai.com/v1/responses \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @request.json > response.json

          # Optional: show a tiny preview in logs
          node -e "
            const r = require('./response.json');
            const t = r.output_text || (r.output?.[0]?.content?.[0]?.text) || '';
            console.log('\n--- Model preview (first 400 chars) ---\n' + String(t).slice(0,400) + '\n--- end preview ---');
          "

      - name: Write output to app/page.tsx
        run: |
          set -e
          node -e "
            const fs = require('fs');
            const r = require('./response.json');
            const text = r.output_text || (r.output?.[0]?.content?.[0]?.text) || '';
            if (!text) { console.error('No output_text found in response.json'); process.exit(1); }
            fs.writeFileSync('app/page.tsx', text, 'utf8');
            console.log('Wrote app/page.tsx with', text.length, 'chars');
          "

      - name: Commit & push changes
        shell: bash
        run: |
          set -e
          git config user.name  "ai-bot"
          git config user.email "ai-bot@users.noreply.github.com"

          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git add app/page.tsx
          git commit -m "AI bot: update homepage from prompt"
          git push
