name: Prompt Bot

on:
  # Manual run from Actions tab
  workflow_dispatch:
    inputs:
      prompt:
        description: "Prompt to send to the model"
        required: true
        type: string
  # Optional: allow your iOS Shortcut to trigger it
  repository_dispatch:
    types: [chatgpt_task]

permissions:
  contents: write

jobs:
  run-prompt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate homepage with OpenAI (no heredocs)
        id: gen
        uses: actions/github-script@v7
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const fs = require('fs');

            // Pull prompt from iOS Shortcut payload first, else from manual input
            const payload = context.payload?.client_payload || {};
            const prompt =
              payload.prompt ||
              core.getInput('prompt') ||
              'Write a minimal Next.js 14 TypeScript client component for app/page.tsx that renders a blue hero with the headline “OhmWork — No BS Electrician’s Guide”, a short subhead, and a primary button linking to /guide. Use Tailwind. Only `import React from "react"`. Export default function Page().';

            core.info('Using prompt: ' + prompt.slice(0, 120) + (prompt.length > 120 ? '…' : ''));

            // Call Responses API
            const res = await fetch('https://api.openai.com/v1/responses', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                model: 'gpt-4.1-mini',
                input: prompt
              })
            });

            const data = await res.json();
            core.info('OpenAI status: ' + res.status);

            if (!res.ok) {
              core.setFailed('OpenAI error: ' + JSON.stringify(data));
              return;
            }

            const text =
              data.output_text ||
              (data.output && data.output[0]?.content?.[0]?.text) ||
              '';

            if (!text.trim()) {
              core.setFailed('No output_text found in OpenAI response.');
              return;
            }

            // Write the page
            fs.writeFileSync('app/page.tsx', text);
            core.info('Wrote app/page.tsx (' + text.length + ' chars)');

      - name: Commit & push changes
        run: |
          git config user.name "ai-bot"
          git config user.email "ai-bot@users.noreply.github.com"
          git add app/page.tsx
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "AI bot: update homepage"
            git push
          fi
