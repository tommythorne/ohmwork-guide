name: Prompt Bot (frozen)

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Prompt to send (no file writes while frozen)"
        required: false
        type: string
  repository_dispatch:
    types: [chatgpt_task]

permissions:
  contents: read

jobs:
  run-prompt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Resolve prompt
        id: p
        run: |
          echo "PROMPT<<'EOF'" >> "$GITHUB_ENV"
          if [ -n "${{ github.event.client_payload.prompt }}" ]; then
            printf "%s\n" "${{ github.event.client_payload.prompt }}" >> "$GITHUB_ENV"
          elif [ -n "${{ inputs.prompt }}" ]; then
            printf "%s\n" "${{ inputs.prompt }}" >> "$GITHUB_ENV"
          else
            printf "%s\n" "Test run while frozen." >> "$GITHUB_ENV"
          fi
          echo "EOF" >> "$GITHUB_ENV"

      - name: Call OpenAI (log only)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT: ${{ env.PROMPT }}
        run: |
          node - <<'NODE'
          const apiKey = process.env.OPENAI_API_KEY;
          const prompt = process.env.PROMPT || "";
          if (!apiKey) { console.error("Missing OPENAI_API_KEY"); process.exit(1); }
          (async () => {
            const r = await fetch('https://api.openai.com/v1/responses', {
              method: 'POST',
              headers: { 'Authorization': `Bearer ${apiKey}`, 'Content-Type': 'application/json' },
              body: JSON.stringify({ model: 'gpt-4.1-mini', input: prompt })
            });
            const j = await r.json();
            console.log('status:', r.status);
            console.log('output_text preview:', (j.output_text || '').slice(0,200));
          })().catch(e => { console.error(e); process.exit(1); });
          NODE
