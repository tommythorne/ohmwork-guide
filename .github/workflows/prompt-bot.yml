name: Prompt Bot

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Prompt to send to the model"
        required: true
        type: string
  repository_dispatch:
    types: [chatgpt_task]

permissions:
  contents: write

jobs:
  run-prompt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 1) Resolve prompt from Shortcut (repository_dispatch) or manual input
      - name: Resolve prompt from event or manual input
        id: prompt
        shell: bash
        env:
          MANUAL: ${{ github.event.inputs.prompt }}
        run: |
          set -e
          if [ "${GITHUB_EVENT_NAME}" = "repository_dispatch" ]; then
            # may be string or object; stringify safely
            P='${{ toJSON(github.event.client_payload.prompt) }}'
          else
            P="${MANUAL}"
          fi
          echo "Prompt preview:"
          echo "$P"
          echo "prompt<<EOF" >> "$GITHUB_OUTPUT"
          echo "$P"         >> "$GITHUB_OUTPUT"
          echo "EOF"        >> "$GITHUB_OUTPUT"

      # 2) Build request for OpenAI Responses API
      - name: Build request.json for OpenAI
        shell: bash
        env:
          PROMPT: ${{ steps.prompt.outputs.prompt }}
        run: |
          cat > request.json <<'JSON'
          {
            "model": "gpt-4.1-mini",
            "input": __PROMPT__
          }
          JSON
          # inject the (possibly multiline) prompt safely
          node -e "
            const fs=require('fs');
            const p=process.env.PROMPT ?? '';
            const req=fs.readFileSync('request.json','utf8').replace('__PROMPT__', p);
            fs.writeFileSync('request.json', req);
          "

      # 3) Call OpenAI
      - name: Call OpenAI (Responses API)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -e
          curl -sS https://api.openai.com/v1/responses \
            -H "Authorization: Bearer ${OPENAI_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @request.json > response.json
          node -e "const r=require('./response.json'); console.log('output_text length:', (r.output_text||'').length)"

      # 4) Write output to app/page.tsx (TSX-safe)
      - name: Write output to app/page.tsx
        shell: bash
        run: |
          set -e
          node - <<'NODE'
          const fs = require('fs');
          const r  = require('./response.json');
          const text = (r.output_text || '').trim();
          if (!text) { console.error('No output_text found in response.json'); process.exit(1); }

          // Escape to safe HTML so TSX won't break
          const html = String(text)
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\r?\n/g, '<br/>');

          const tsx = `export default function Page() {
            return (
              <main style={{
                minHeight: '100vh',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                background: '#0b1220',
                color: 'white',
                padding: '4rem 1rem'
              }}>
                <div style={{ maxWidth: 720 }}>
                  <div dangerouslySetInnerHTML={{ __html: \`${html}\` }} />
                </div>
              </main>
            );
          }`;
          fs.writeFileSync('app/page.tsx', tsx);
          console.log('Wrote app/page.tsx');
          NODE

      # 5) Commit & push
      - name: Commit & push changes
        shell: bash
        run: |
          set -e
          git config user.name  "ai-bot"
          git config user.email "ai-bot@users.noreply.github.com"
          git add app/page.tsx
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "AI bot: update homepage"
            git push
          fi
