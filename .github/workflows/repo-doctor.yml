name: Repo Doctor

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  doctor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Summarize repo state
        run: |
          echo "## Repo state" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Workflows present" >> $GITHUB_STEP_SUMMARY
          ls -la .github/workflows >> $GITHUB_STEP_SUMMARY || echo "(none)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Bot files present" >> $GITHUB_STEP_SUMMARY
          for f in ".ai-bot/prompt-bot.mjs" ".ai-bot/package.json"; do
            if [ -f "$f" ]; then
              echo "✔ $f" >> $GITHUB_STEP_SUMMARY
            else
              echo "✖ $f" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Check required secrets presence
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          GH_COLLAB_TOKEN: ${{ secrets.GH_COLLAB_TOKEN }}
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Secrets presence" >> $GITHUB_STEP_SUMMARY
          for s in OPENAI_API_KEY VERCEL_TOKEN GH_COLLAB_TOKEN; do
            if [ -n "${!s}" ]; then
              echo "✔ $s set" >> $GITHUB_STEP_SUMMARY
            else
              echo "✖ $s missing" >> $GITHUB_STEP_SUMMARY
              echo "::warning::$s secret is missing"
            fi
          done

      - name: Check required variables presence
        env:
          DEFAULT_BASE_BRANCH: ${{ vars.DEFAULT_BASE_BRANCH }}
          AI_MODEL: ${{ vars.AI_MODEL }}
          VERCEL_PROJECT: ${{ vars.VERCEL_PROJECT }}
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Variables presence" >> $GITHUB_STEP_SUMMARY
          for v in DEFAULT_BASE_BRANCH AI_MODEL VERCEL_PROJECT; do
            if [ -n "${!v}" ]; then
              echo "✔ $v=${!v}" >> $GITHUB_STEP_SUMMARY
            else
              echo "✖ $v missing" >> $GITHUB_STEP_SUMMARY
              echo "::warning::$v variable is missing"
            fi
          done

      - name: Verify PAT can reach repo
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## PAT reachability" >> $GITHUB_STEP_SUMMARY
          if git ls-remote https://x-access-token:${{ secrets.GH_COLLAB_TOKEN }}@github.com/${{ github.repository }}.git > /dev/null 2>&1; then
            echo "✔ GH_COLLAB_TOKEN can access ${GITHUB_REPOSITORY}" >> $GITHUB_STEP_SUMMARY
          else
            echo "✖ GH_COLLAB_TOKEN cannot access repo (check scopes: repo, workflow)" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Verify OpenAI API reachable
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## OpenAI connectivity" >> $GITHUB_STEP_SUMMARY
          CODE=$(curl -s -o /dev/null -w "%{http_code}" https://api.openai.com/v1/models -H "Authorization: Bearer $OPENAI_API_KEY")
          if [ "$CODE" = "200" ]; then
            echo "✔ OpenAI API reachable (200)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✖ OpenAI API check failed (HTTP $CODE). Verify OPENAI_API_KEY." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Node & npm check (for bot)
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Node environment" >> $GITHUB_STEP_SUMMARY
          echo "node: $(node -v)" >> $GITHUB_STEP_SUMMARY
          echo "npm:  $(npm -v)" >> $GITHUB_STEP_SUMMARY
          if [ -f ".ai-bot/package.json" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Installing bot deps (best-effort)" >> $GITHUB_STEP_SUMMARY
            (cd .ai-bot && ( [ -f package-lock.json ] && npm ci || npm install )) >/dev/null 2>&1 || true
            echo "✔ Bot deps install attempted" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Final hints
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Next steps" >> $GITHUB_STEP_SUMMARY
          echo "- If everything above is ✔, ensure your main bot workflow listens to issue comments (on: issue_comment) and try /prompt in an Issue." >> $GITHUB_STEP_SUMMARY
          echo "- If nothing triggers on comment, replace prompt-bot.yml with the issue_comment version I provided." >> $GITHUB_STEP_SUMMARY
